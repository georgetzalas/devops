---
- hosts: appservers

  pre_tasks:
    - name: Install Java
      apt:
        name: openjdk-21-jdk
        state: present
        update_cache: yes
      become: yes

  tasks:

    - name: "debug appdir"
      ansible.builtin.debug:
        msg: "appdir {{ansible_user_dir}}"

    - name: "Clone the Spring repository"
      git:
        repo: "https://github.com/georgetzalas/Distributed-System-Project-Team-22"
        dest: "{{ appdir }}"
        version: "{{ branch }}"
        force: yes

    - name: "Populate application.properties"
      lineinfile:
        dest: "{{ appdir }}/src/main/resources/application.properties"
        state: present
        regexp: "^{{item.key}}="
        line: "{{item.key}}={{item.value}}"
      with_items:
        - "{{app.env | dict2items}}"

    - name: "Make mvnw executable"
      command: "chmod +x mvnw"
      args:
        chdir: "{{ appdir }}"

    - name: "Build spring project"

      block:
        - name: "Build the Spring application"
          command: "./mvnw package -Dmaven.test.skip"
          args:
            chdir: "{{ appdir }}"

      rescue:
        - name: "create .mvn directory"
          command: "mkdir -p .mvn/wrapper/"
          args:
            chdir: "{{ appdir }}"

        - name: List nginx processes and save to file
          ansible.builtin.shell: echo 'distributionUrl=https://repo.maven.apache.org/maven2/org/apache/maven/apache-maven/3.8.8/apache-maven-3.8.8-bin.zip' > .mvn/wrapper/maven-wrapper.properties
          args:
            chdir: "{{ appdir }}"

        - name: Debug
          ansible.builtin.debug:
            msg:
              - "Is this running?"

      always:
        - name: "Build the Spring application"
          command: "./mvnw package -Dmaven.test.skip "
          args:
            chdir: "{{ appdir }}"

    - name: copy spring service file
      template:
        src: ../files/spring.service.j2
        dest: "/etc/systemd/system/spring.service"
      become: yes
      become_user: root
      notify: restart spring

    - name: reload spring service
      service:
        name: spring
        state: restarted
      become: yes

    - name: ensure spring service started
      service:
        name: spring
        state: started
        enabled: yes
      become: yes

    - name: "APT - install nginx"
      apt:
        name: nginx
        update_cache: yes
      become: yes

    - name: copy nginx conf file
      template:
        src: ../files/nginx.http.j2
        dest: "/etc/nginx/sites-available/spring"
      become: yes

    - name: enable spring site in nginx
      file:
        src: "/etc/nginx/sites-available/spring"
        dest: "/etc/nginx/sites-enabled/spring"
        state: link
      become: yes
      notify: restart nginx

    - name: de-activate default nginx site
      file:
        path: /etc/nginx/sites-enabled/default
        state: absent
      become: yes
      notify: restart nginx

  handlers:
  - name: restart spring
    service:
      name: spring
      state: restarted
    become: yes

  - name: restart nginx
    service:
      name: nginx
      state: restarted
    become: yes

