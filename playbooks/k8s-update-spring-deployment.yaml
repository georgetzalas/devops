---
  - name: Update Kubernetes Deployment Image
    hosts: localhost
    gather_facts: no
    vars:
      namespace: default
      deployment_name: spring-deployment
      container_name: spring
      new_image: "ghcr.io/georgetzalas/spring:latest"

      #tasks:
      #- name: Update the deployment image
      #  kubernetes.core.k8s:
      #    state: present
      #    kubeconfig: "/var/lib/jenkins/.kube/config"
      #    namespace: "{{ namespace }}"
      #    kind: Deployment
      #    name: "{{ deployment_name }}"
      #    definition:
      #      spec:
      #        template:
      #          spec:
      #            containers:
      #              - name: "{{ container_name }}"
      #                image: "{{ new_image }}"

      tasks:
      - name: Apply Spring Deployment
        kubernetes.core.k8s:
          state: present
        definition:
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: "{{ deployment_name }}"
            namespace: "{{ namespace }}"
            labels:
              app: "{{ container_name }}"
          spec:
            replicas: 1
            selector:
              matchLabels:
                app: "{{ container_name }}"
            template:
              metadata:
                labels:
                  app: "{{ container_name }}"
              spec:
                containers:
                  - name: "{{ container_name }}"
                    image: "{{ new_image }}"
                    ports:
                      - containerPort: 8080
                        name: "{{ container_name }}"
                    env:
                      - name: SPRING_DATASOURCE_URL
                        value: jdbc:postgresql://postgres:5432/dsdb
                      - name: SPRING_DATASOURCE_USERNAME
                        value: dbuser
                      - name: SPRING_DATASOURCE_PASSWORD
                        value: pass123
                    livenessProbe:
                      httpGet:
                        path: "/actuator/health/liveness"
                        port: 8080
                      failureThreshold: 20
                      periodSeconds: 10
                      initialDelaySeconds: 30
                    readinessProbe:
                      httpGet:
                        path: "/actuator/health/readiness"
                        port: 8080
                      failureThreshold: 10
                      periodSeconds: 10
                      initialDelaySeconds: 30
                    resources:
                      requests:
                        cpu: 200m
                        memory: 256Mi
                      limits:
                        cpu: 1000m
                        memory: 512Mi



      - name: Wait for rollout to complete
        command: kubectl rollout status deployment/{{ deployment_name }} -n {{ namespace }} --timeout=360s
        register: rollout_result
        environment:
          KUBECONFIG: "/var/lib/jenkins/.kube/config"
        failed_when: "'successfully rolled out' not in rollout_result.stdout"
        changed_when: false

      - name: Get pods in deployment
        kubernetes.core.k8s_info:
          kubeconfig: "/var/lib/jenkins/.kube/config"
          kind: Pod
          namespace: "{{ namespace }}"
          label_selectors:
            - "app={{ deployment_name }}"
        register: pod_list

      - name: Ensure all pods use the correct image
        fail:
          msg: "One or more pods do not have the updated image {{ new_image }}"
        when: >
          pod_list.resources | selectattr('status.phase', 'equalto', 'Running') |
          selectattr('spec.containers', 'defined') |
          reject('containers_all_use_image', new_image) | list | length > 0
