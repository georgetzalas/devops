---
- name: Deploy or update Spring app with proper labels and service
  hosts: localhost
  gather_facts: no
  vars:
    namespace: default
    deployment_name: spring-deployment
    container_name: spring
    new_image: "ghcr.io/georgetzalas/spring:latest"
    app_label: spring

  tasks:
    - name: Create or update Spring Deployment
      kubernetes.core.k8s:
        state: present
        kubeconfig: "/var/lib/jenkins/.kube/config"
        namespace: "{{ namespace }}"
        kind: Deployment
        name: "{{ deployment_name }}"
        definition:
          metadata:
            labels:
              app: "{{ app_label }}"
          spec:
            replicas: 1
            selector:
              matchLabels:
                app: "{{ app_label }}"
            template:
              metadata:
                labels:
                  app: "{{ app_label }}"
              spec:
                containers:
                  - name: "{{ container_name }}"
                    image: "{{ new_image }}"
                    env:
                      - name: SPRING_DATASOURCE_URL
                        value: "jdbc:postgresql://postgres:5432/dsdb"
                      - name: SPRING_DATASOURCE_USERNAME
                        value: "dbuser"
                      - name: SPRING_DATASOURCE_PASSWORD
                        value: "pass123"
                    ports:
                      - containerPort: 8080

    - name: Wait for rollout to complete
      command: kubectl rollout status deployment/{{ deployment_name }} -n {{ namespace }} --timeout=360s
      register: rollout_result
      environment:
        KUBECONFIG: "/var/lib/jenkins/.kube/config"
      failed_when: "'successfully rolled out' not in rollout_result.stdout"
      changed_when: false

    - name: Get pods in deployment
      kubernetes.core.k8s_info:
        kubeconfig: "/var/lib/jenkins/.kube/config"
        kind: Pod
        namespace: "{{ namespace }}"
        label_selectors:
          - "app={{ app_label }}"
      register: pod_list

        #- name: Ensure all pods use the correct image
        #fail:
        #msg: "One or more pods do not have the updated image {{ new_image }}"
        #when: >
        #pod_list.resources | selectattr('status.phase', 'equalto', 'Running') |
        #selectattr('spec.containers', 'defined') |
        #reject('containers_all_use_image', new_image) | list | length > 0

